# See https://docs.docker.com/build/ci/github-actions/multi-platform/
name: Docker

on:
  pull_request:
    types:
      - edited
      - opened
      - ready_for_review
      - synchronize
    branches:
      - "*"
  workflow_call:
    inputs:
      tag:
        type: string
        required: false
    secrets:
      DOCKER_USERNAME:
        description: Username for DockerHub
        required: true
      DOCKER_PASSWORD:
        description: Password for DockerHub
        required: true
env:
  REGISTRY_IMAGE: zerok/geotrace
  # Docker image tags. See https://github.com/docker/metadata-action for format
  TAGS_CONFIG: |
    type=sha,prefix={{branch}}-,format=short,enable=${{ github.ref == 'refs/heads/main' }}
    type=raw,value=latest,enable=${{ inputs.tag != '' }}
    type=raw,value=main,enable=${{ inputs.tag == '' }}
    type=semver,pattern={{version}},value=${{ inputs.tag }},enable=${{ inputs.tag != '' }}

jobs:
  build:
    permissions:
      contents: read

    strategy:
      fail-fast: false
      matrix:
        platform:
          - ubuntu-24.04
          - ubuntu-24.04-arm
        isPR:
          - ${{ github.event_name == 'pull_request'}}
        include:
          - { platform: "ubuntu-24.04" }
        exclude:
          - { isPR: true }

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: ${{ env.TAGS_CONFIG }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Log into DockerHub
        if: github.event_name == 'push'
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=${{ github.event_name != 'pull_request' }}

      - name: Export digest
        id: digest
        if: github.event_name == 'push'
        run: | # zizmor: ignore[template-injection] This relies on data generated by docker/buid-push-action and should therefore be safe
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
          echo "artifact_name=digests-${{ matrix.platform }}" | sed -e 's/\//-/g' >> "$GITHUB_OUTPUT"

      - name: Upload digest
        if: github.event_name == 'push'
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ steps.digest.outputs.artifact_name }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    permissions:
      contents: read
    needs:
      - build
    steps:
      - name: Download digests (linux/arm64)
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: digests-ubuntu-24.04-arm
          path: /tmp/digests-linux-arm64

      - name: Download digests (linux/amd64)
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: digests-ubuntu-24.04
          path: /tmp/digests-linux-amd64

      - name: Merge digests
        run: |
          mkdir -p /tmp/digests
          cp /tmp/digests-linux-amd64/* /tmp/digests/
          cp /tmp/digests-linux-arm64/* /tmp/digests/

      - name: Log into DockerHub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: ${{ env.TAGS_CONFIG }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)
      - name: Inspect image
        env:
          RELEASE_VERSION: "${{ steps.meta.outputs.version }}"
        run: |
          docker buildx imagetools inspect "${{ env.REGISTRY_IMAGE }}:${RELEASE_VERSION}"
